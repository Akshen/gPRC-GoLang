syntax = "proto3";

package calculator;
option go_package="calculator/calpb";


message calRequest{
    int32 first_num = 1;
    int32 second_num = 2;
}

message calResponse {
    int32 result = 1;
}

message PrimeNoDecompositionRequest{
    int32 number = 1;
}

message PrimeNoDecompositionResponse{
    string result = 1;
}

message CalAverageofNumbersRequest {
    int32 number = 1;
}

message CalAverageofNumbersResponse {
    int32 result = 1;
}

message FindMaximumRequest{
    int32 number = 1;
}

message FindMaximumResponse {
    int32 max_number = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse{
    double number_root = 1;
}

service CalService{
    //Unary
    rpc Calculation(calRequest) returns (calResponse) {};

    //Server Streaming
    rpc PrimeNoDecomposition(PrimeNoDecompositionRequest) returns (stream PrimeNoDecompositionResponse) {};

    //Client streaming
    rpc CalAverageofNumbers(stream CalAverageofNumbersRequest) returns (CalAverageofNumbersResponse) {};

    //Bi-Directional Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    //Error handling, this RPC will throw an exception if the sent number is negative
    //The Error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}
